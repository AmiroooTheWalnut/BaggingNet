/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphics;

import MainModel.TestResult;

/**
 *
 * @author Amir72c
 */
public class TestSimpleNetDialog extends javax.swing.JDialog {

    MainFrame myParent;

    /**
     * Creates new form TestSimpleNetDialog
     */
    public TestSimpleNetDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myParent = (MainFrame) parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testSimpleNetSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        testPercentSimpleNetSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        testButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        testSimpleNetSlider.setMaximum(99);
        testSimpleNetSlider.setMinimum(1);
        testSimpleNetSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                testSimpleNetSliderStateChanged(evt);
            }
        });

        jLabel4.setText("Known transaction percent:");

        testPercentSimpleNetSpinner.setModel(new javax.swing.SpinnerNumberModel(20, 1, 99, 1));

        jLabel3.setText("Test percent:");

        jLabel5.setText("50%");

        testButton.setText("Test");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Mean absolute error:");

        jLabel2.setText("No test");

        jCheckBox1.setText("Randomly drawn?");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Sorted by date?");

        jCheckBox3.setSelected(true);
        jCheckBox3.setText("From beginnging?");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(testPercentSimpleNetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(testSimpleNetSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(testPercentSimpleNetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testSimpleNetSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void testSimpleNetSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_testSimpleNetSliderStateChanged
        // TODO add your handling code here:
        jLabel5.setText(testSimpleNetSlider.getValue() + "%");
    }//GEN-LAST:event_testSimpleNetSliderStateChanged

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        // TODO add your handling code here:
        TestResult tr = myParent.allData.simpleNet.testModel(myParent.allData.dataSet.randomSample((int) testPercentSimpleNetSpinner.getValue()), testSimpleNetSlider.getValue());
        StringBuilder resultText = new StringBuilder();
        for (int i = 0; i < tr.predictions.size(); i++) {
            resultText.append("%%%");
            resultText.append("\n");
            for (int j = 0; j < tr.predictions.get(i).staticTransactions.size(); j++) {
                if (tr.predictions.get(i).staticTransactions.get(j).data[myParent.allData.dataSet.timeIndex].length()==0) {
                    for (int k = 0; k < tr.predictions.get(i).staticTransactions.get(j).data.length; k++) {
                        resultText.append(tr.predictions.get(i).staticTransactions.get(j).data[k]);
                        resultText.append(",");
                    }
                    resultText.append("Duration: ").append(tr.predictions.get(i).staticTransactions.get(j).duration);
                    resultText.append(",");
                    resultText.append("*PREDICTED*");
                } else {
                    for (int k = 0; k < tr.predictions.get(i).staticTransactions.get(j).data.length; k++) {
                        resultText.append(tr.predictions.get(i).staticTransactions.get(j).data[k]);
                        resultText.append(",");
                    }
                    resultText.append("Duration: ").append(tr.predictions.get(i).staticTransactions.get(j).duration);
                    resultText.append(",");
                    resultText.append("KNOWN");
                }
                resultText.append("\n");
            }
            resultText.append("Real duration: ").append(tr.realDurations[i]);
            resultText.append("\n");
            resultText.append("Predicted duration: ").append(tr.predictedDurations[i]);
            resultText.append("\n");
            resultText.append("Case event inconformity: ").append(tr.numEventInconformities[i]);
            resultText.append("\n");
            resultText.append("Case time inconformity: ").append(tr.timeInconformityDays[i]);
            resultText.append("\n");
            resultText.append("%%%");
            resultText.append("\n");
        }
        jTextArea1.setText(resultText.toString());
        jLabel2.setText(String.valueOf(tr.durationMeanAbsoluteError));
    }//GEN-LAST:event_testButtonActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected())
        {
            jCheckBox2.setEnabled(false);
            jCheckBox3.setEnabled(false);
        }else{
            jCheckBox2.setEnabled(true);
            jCheckBox3.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton testButton;
    private javax.swing.JSpinner testPercentSimpleNetSpinner;
    private javax.swing.JSlider testSimpleNetSlider;
    // End of variables declaration//GEN-END:variables
}
